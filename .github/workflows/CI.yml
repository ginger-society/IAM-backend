name: Build, Push Docker Image, and Restart Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install OpenSSL 1.1
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget http://nz2.archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.23_amd64.deb
          sudo dpkg -i libssl1.1_1.1.1f-1ubuntu2.23_amd64.deb

      - name: Install ginger-apps
        run: bash -c "$(curl -fsSL https://raw.githubusercontent.com/ginger-society/infra-as-code-repo/main/rust-helpers/install-pipeline-clis.sh)"

      - name: Authenticate with ginger-auth
        id: ginger-auth
        run: ginger-auth token-login ${{ secrets.GINGER_TOKEN }}

      - name: Update status to running
        run: ginger-connector update-pipeline stage running

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
        continue-on-error: false
      - name: Report failure if Docker login fails
        if: failure()
        run: ginger-connector update-pipeline stage failed

      - name: Build Docker image
        run: docker build --build-arg GINGER_TOKEN=${{ secrets.GINGER_TOKEN }} -t ${{ secrets.DOCKER_HUB_USERNAME }}/iam-service-api-stage:latest .
        continue-on-error: false
      - name: Report failure if Docker build fails
        if: failure()
        run: ginger-connector update-pipeline stage failed

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/iam-service-api-stage:latest
        continue-on-error: false
      - name: Report failure if Docker push fails
        if: failure()
        run: ginger-connector update-pipeline stage failed

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.STAGING_K8_CONFIG }}" > $HOME/.kube/config
        continue-on-error: false
      - name: Report failure if Kubeconfig setup fails
        if: failure()
        run: ginger-connector update-pipeline stage failed

      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
        continue-on-error: false
      - name: Report failure if kubectl installation fails
        if: failure()
        run: ginger-connector update-pipeline stage failed

      - name: Restart Kubernetes deployment
        run: kubectl rollout restart deployment iam-service-api-deployment
        continue-on-error: false
      - name: Report failure if Kubernetes restart fails
        if: failure()
        run: ginger-connector update-pipeline stage failed

      - name: Publish stage using ginger-connector
        run: ginger-connector publish stage
        env:
          GINGER_API_TOKEN: ${{ secrets.GINGER_API_TOKEN }}
        continue-on-error: false
      - name: Report failure if publish stage fails
        if: failure()
        run: ginger-connector update-pipeline stage failed

      - name: Publish stage using ginger-connector for k8
        run: ginger-connector publish stage-k8
        env:
          GINGER_API_TOKEN: ${{ secrets.GINGER_API_TOKEN }}
        continue-on-error: false
      - name: Report failure if publish stage-k8 fails
        if: failure()
        run: ginger-connector update-pipeline stage failed

      - name: Update status to passing
        if: success()
        run: ginger-connector update-pipeline stage passing

      - name: Trigger dependent pipelines
        if: success()
        run: ginger-connector trigger-dependent-pipelines ${{ secrets.GH_TOKEN }} --pipelines-to-skip MetadataService
      
      - name: Trigger NotificationService pipeline
        if: success()
        run: ginger-connector trigger-pipeline NotificationService ${{ secrets.GH_TOKEN }}
